{"version":3,"sources":["components/search-bar.js","components/product-category-row.js","components/product-row.js","components/product-table.js","components/app.js","mock/products.js","index.js"],"names":["SearchBar","handleFilterTextChange","e","props","onFilterTextChange","target","value","handleInStockChange","onInStockChange","checked","this","filterText","inStockOnly","type","placeholder","onChange","id","htmlFor","React","Component","ProductCategoryRow","category","colSpan","ProductRow","product","name","stocked","price","className","ProductTable","filteredProducts","products","filter","toLowerCase","indexOf","rows","lastCategory","forEach","push","length","App","state","setState","PRODUCTS","ReactDOM","render","document","getElementById"],"mappings":"4NA+BeA,E,4MA5BbC,uBAAyB,SAACC,GAAD,OAAO,EAAKC,MAAMC,mBAAmBF,EAAEG,OAAOC,Q,EACvEC,oBAAsB,SAACL,GAAD,OAAO,EAAKC,MAAMK,gBAAgBN,EAAEG,OAAOI,U,uDAEvD,IAAD,EAC2BC,KAAKP,MAAhCQ,EADA,EACAA,WAAYC,EADZ,EACYA,YACnB,OACE,iCACE,uBACEC,KAAK,OACLC,YAAY,oCACZR,MAAOK,EACPI,SAAUL,KAAKT,yBAEjB,8BACE,uBAAOe,GAAG,cACRH,KAAK,WACLJ,QAASG,EACTG,SAAUL,KAAKH,sBAEjB,uBAAOU,QAAQ,cAAf,gN,GApBcC,IAAMC,WCQfC,EARY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OACE,6BACE,oBAAIC,QAAQ,IAAZ,SAAiBD,OCMRE,EATI,SAAC,GAAuC,IAAD,IAArCC,QAAUC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC5C,OACE,qBAAIC,UAAYF,EAAsB,GAAZ,UAA1B,UACE,6BAAKD,IACL,6BAAKE,QCyCIE,EA3CM,SAAC,GAAyC,IAAxClB,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,YAC3BkB,EADsD,EAAdC,SAE3CC,QAAO,gBAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,MAAlB,QAA4E,IAA5CF,EAAKQ,cAAcC,QAAQvB,KAAqE,IAA7CgB,EAAMM,cAAcC,QAAQvB,OAA0BC,IAAgBc,MAC7JS,EAAO,GACTC,EAAe,KAsBnB,OApBAN,EAAiBO,SAAQ,SAACb,GAAa,IAC7BC,EAAmBD,EAAnBC,KAAMJ,EAAaG,EAAbH,SAEVA,IAAae,GACfD,EAAKG,KACH,cAAC,EAAD,CACEjB,SAAUA,GACLA,IAIXc,EAAKG,KACH,cAAC,EAAD,CACEd,QAASA,GACJC,IAGTW,EAAef,KAGG,IAAhBc,EAAKI,OACA,gIAIP,kCACE,gCACE,+BACE,0GACA,+DAGJ,gCAAQJ,QCDCK,E,4MApCbC,MAAQ,CACN9B,WAAY,GACZC,aAAa,G,EAGfX,uBAAyB,SAACU,GACxB,EAAK+B,SAAS,CACZ/B,WAAYA,K,EAIhBJ,oBAAsB,SAACK,GACrB,EAAK8B,SAAS,CACZ9B,YAAaA,K,uDAKf,OACE,sBAAKgB,UAAU,gBAAf,UACE,cAAC,EAAD,CACEjB,WAAYD,KAAK+B,MAAM9B,WACvBC,YAAaF,KAAK+B,MAAM7B,YACxBR,mBAAoBM,KAAKT,uBACzBO,gBAAiBE,KAAKH,sBAExB,cAAC,EAAD,CACEwB,SAAUrB,KAAKP,MAAM4B,SACrBpB,WAAYD,KAAK+B,MAAM9B,WACvBC,YAAaF,KAAK+B,MAAM7B,qB,GA9BhBM,IAAMC,WC8BTwB,EAlCE,CACf,CACEtB,SAAU,+DACVM,MAAO,SACPD,SAAS,EACTD,KAAM,wCAER,CACEJ,SAAU,+DACVM,MAAO,QACPD,SAAS,EACTD,KAAM,8CAER,CACEJ,SAAU,+DACVM,MAAO,SACPD,SAAS,EACTD,KAAM,0DAER,CACEJ,SAAU,qEACVM,MAAO,SACPD,SAAS,EACTD,KAAM,cAER,CACEJ,SAAU,qEACVM,MAAO,UACPD,SAAS,EACTD,KAAM,YAER,CAAEJ,SAAU,qEAAeM,MAAO,UAAWD,SAAS,EAAMD,KAAM,YCxBpEmB,IAASC,OACP,cAAC,EAAD,CAAKd,SAAUY,IACfG,SAASC,eAAe,W","file":"static/js/main.9de3fe60.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  handleFilterTextChange = (e) => this.props.onFilterTextChange(e.target.value);\r\n  handleInStockChange = (e) => this.props.onInStockChange(e.target.checked);\r\n\r\n  render() {\r\n    const {filterText, inStockOnly} = this.props; \r\n    return (\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Поиск...\"\r\n          value={filterText}\r\n          onChange={this.handleFilterTextChange}\r\n        />\r\n        <p>\r\n          <input id=\"showInStock\"\r\n            type=\"checkbox\"\r\n            checked={inStockOnly}\r\n            onChange={this.handleInStockChange}\r\n          />\r\n          <label htmlFor=\"showInStock\">\r\n            Показывать только товары в наличии\r\n          </label>\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst ProductCategoryRow = ({ category }) => {\r\n  return (\r\n    <tr>\r\n      <th colSpan=\"2\">{category}</th>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ProductCategoryRow;\r\n","import React from \"react\";\r\n\r\nconst ProductRow = ({product: {name, stocked, price}}) => {\r\n  return(\r\n    <tr className={!stocked ? 'warning' : ''}>\r\n      <td>{name}</td>\r\n      <td>{price}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default ProductRow;\r\n","import React from \"react\";\r\nimport ProductCategoryRow from \"./product-category-row\";\r\nimport ProductRow from \"./product-row\";\r\n\r\nconst ProductTable = ({filterText, inStockOnly, products}) => {\r\n  const filteredProducts = products\r\n    .filter(({ name, stocked, price }) => ((name.toLowerCase().indexOf(filterText) !== -1) || (price.toLowerCase().indexOf(filterText) !== -1)) && !(inStockOnly && !stocked) )\r\n  const rows = [];\r\n  let lastCategory = null;\r\n\r\n  filteredProducts.forEach((product) => {\r\n    const { name, category } = product;\r\n    \r\n    if (category !== lastCategory) {\r\n      rows.push(\r\n        <ProductCategoryRow\r\n          category={category}\r\n          key={category} />\r\n      );\r\n    }\r\n\r\n    rows.push(\r\n      <ProductRow\r\n        product={product}\r\n        key={name}\r\n      />\r\n    );\r\n    lastCategory = category;\r\n  });\r\n\r\n  if (rows.length === 0) {\r\n    return <p>Ничего не найдено...</p>;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Наименование</th>\r\n          <th>Цена</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{rows}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default ProductTable;\r\n","import React from \"react\";\nimport SearchBar from \"./search-bar\";\nimport ProductTable from \"./product-table\";\n\nclass App extends React.Component {\n  state = {\n    filterText: \"\",\n    inStockOnly: false,\n  };\n\n  handleFilterTextChange = (filterText) => {\n    this.setState({\n      filterText: filterText,\n    });\n  }\n\n  handleInStockChange = (inStockOnly) => {\n    this.setState({\n      inStockOnly: inStockOnly,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"product-table\">\n        <SearchBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={this.handleFilterTextChange}\n          onInStockChange={this.handleInStockChange}\n        />\n        <ProductTable\n          products={this.props.products}\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const PRODUCTS = [\r\n  {\r\n    category: \"Спортовары\",\r\n    price: \"$49.99\",\r\n    stocked: true,\r\n    name: \"Футбол\",\r\n  },\r\n  {\r\n    category: \"Спортовары\",\r\n    price: \"$9.99\",\r\n    stocked: true,\r\n    name: \"Бейсбол\",\r\n  },\r\n  {\r\n    category: \"Спортовары\",\r\n    price: \"$29.99\",\r\n    stocked: false,\r\n    name: \"Баскетбол\",\r\n  },\r\n  {\r\n    category: \"Электроника\",\r\n    price: \"$99.99\",\r\n    stocked: true,\r\n    name: \"iPod Touch\",\r\n  },\r\n  {\r\n    category: \"Электроника\",\r\n    price: \"$399.99\",\r\n    stocked: false,\r\n    name: \"iPhone 5\",\r\n  },\r\n  { category: \"Электроника\", price: \"$199.99\", stocked: true, name: \"Nexus 7\" },\r\n];\r\n\r\nexport default PRODUCTS;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nimport PRODUCTS from './mock/products';\n\nReactDOM.render(\n  <App products={PRODUCTS}  />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}